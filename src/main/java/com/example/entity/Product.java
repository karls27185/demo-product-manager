package com.example.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Класс Product представляет собой сущность JPA, которая описывает продукт.
 * Он содержит информацию о продукте, такую как его название, количество и категория.
 * Класс также имеет первичный ключ, который автоматически генерируется с использованием стратегии генерации последовательности.
 * */

@Entity //указывает, что класс является сущностью JPA
@Data //добавляет в класс конструктор по умолчанию, геттеры, сеттеры, методы equals, hashCode и toString
@Builder //генерирует статический внутренний класс Builder, который позволяет создавать экземпляры класса с помощью цепочки вызовов методов
@NoArgsConstructor //добавляет в класс конструктор без аргументов
@AllArgsConstructor //Добавляет в класс конструктор со всеми аргументами
public class Product {

    @Id //указывает, что поле является первичным ключом сущности
    @GeneratedValue(strategy = GenerationType.SEQUENCE) //указывает, что значение первичного ключа должно генерироваться автоматически с использованием последовательности
    private Long id; //первичный ключ сущности, который генерируется автоматически с использованием стратегии генерации последовательности
    private String name; //название продукта
    private Short amount; //количество продукта
    @ManyToOne //указывает, что поле является ссылкой на другую сущность
    @JoinColumn(name = "category_id") //указывает, что поле category связано с полем category_id другой сущности
    private Category category; //ссылка на категорию, к которой принадлежит продукт
}
